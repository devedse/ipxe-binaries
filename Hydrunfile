#!/bin/bash 

set -e

# C
if [ "$1" = "c" ]; then
    # Install native dependencies
    apt update
    apt install -y git make build-essential liblzma-dev gcc-arm-linux-gnueabi gcc-aarch64-linux-gnu ccache

    # Configure Git
    git config --global --add safe.directory '*'

    # Get latest iPXE release
    rm -rf ipxe
    git clone https://github.com/ipxe/ipxe.git
    cd ipxe/src
    # We use the latest `master` branch since the release is broken (see https://github.com/ipxe/ipxe/issues/1293),
    # also run `git checkout $(git tag --sort=-v:refname | head -n1)` once there is a release with the fix

    # Enable iPXE features
    sed -i -e 's/#undef\tDOWNLOAD_PROTO_HTTPS/#define\tDOWNLOAD_PROTO_HTTPS/g' config/general.h
    sed -i -e 's/\/\/#define PING_CMD/#define PING_CMD/g' config/general.h
    sed -i -e 's/\/\/#define VLAN_CMD/#define VLAN_CMD/g' config/general.h
    sed -i -e 's/\/\/#define REBOOT_CMD/#define REBOOT_CMD/g' config/general.h
    sed -i -e 's/\/\/#define POWEROFF_CMD/#define POWEROFF_CMD/g' config/general.h
    sed -i -e 's/\/\/#define NSLOOKUP_CMD/#define NSLOOKUP_CMD/g' config/general.h
    sed -i -e 's/\/\/#define IPSTAT_CMD/#define IPSTAT_CMD/g' config/general.h
    sed -i -e 's/\/\/#define IMAGE_PNG/#define IMAGE_PNG/g' config/general.h
    sed -i -e 's/\/\/#define CONSOLE_CMD/#define CONSOLE_CMD/g' config/general.h
    sed -i -e 's/\/\/#define CONSOLE_FRAMEBUFFER/#define CONSOLE_FRAMEBUFFER/g' config/console.h
    sed -i -e 's/\/\/#define LOG_LEVEL/#define LOG_LEVEL/g' config/console.h

    # Add the embedded script
    cp ../../config/init.ipxe .

    # Configure make
    EMBEDDED_MAKE() {
        make EMBED="init.ipxe" -j"$(nproc)" "$@"
    }

    # Configure ccache
    ccache -F 0
    ccache -M 0

    # Get ccache stats
    ccache -s

    # Build
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-pcbios/ipxe.kpxe
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-efi/ipxe.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-x86_64-efi/ipxe.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache arm-linux-gnueabi-" ARCH=arm32 bin-arm32-efi/snp.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache aarch64-linux-gnu-" ARCH=arm64 bin-arm64-efi/snp.efi

    # Stage into temporary directory
    mkdir -p /tmp/out
    cp bin-i386-pcbios/ipxe.kpxe /tmp/out/ipxe-i386.kpxe
    cp bin-i386-efi/ipxe.efi /tmp/out/ipxe-i386.efi
    cp bin-x86_64-efi/ipxe.efi /tmp/out/ipxe-x86_64.efi
    cp bin-arm32-efi/snp.efi /tmp/out/ipxe-arm32.efi
    cp bin-arm64-efi/snp.efi /tmp/out/ipxe-arm64.efi
    cp ../../config/config.go /tmp/out
    cp ../../config/config.ipxe /tmp/out

    # Create tar archive in out directory
    mkdir -p ../../out
    tar -zcvf ../../out/ipxe.tar.gz -C /tmp/out .

    # Get ccache stats
    ccache -s

    exit 0
fi
