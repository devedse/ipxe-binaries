#!/bin/bash 

set -e

# C
if [ "$1" = "c" ]; then
    # Install native dependencies
    apt update
    apt install -y git make build-essential liblzma-dev gcc-arm-linux-gnueabi gcc-aarch64-linux-gnu ccache

    # Configure Git
    git config --global --add safe.directory '*'

    # Get latest iPXE release
    rm -rf ipxe
    git clone --branch copilot/fix-1 https://github.com/devedse/ipxe.git
    cd ipxe/src
    # We use the copilot/fix-1 branch

    # Create custom configuration
    cat > config/customconfig.h << 'EOF'
#define DOWNLOAD_PROTO_HTTPS
#define PING_CMD
#define VLAN_CMD
#define REBOOT_CMD
#define POWEROFF_CMD
#define NSLOOKUP_CMD
#define IPSTAT_CMD
#define IMAGE_PNG
#define CONSOLE_CMD
#define PCI_CMD
#define USB_CMD
#define FDT_CMD
#define PNPLIST_CMD

#define CONSOLE_FRAMEBUFFER
#define LOG_LEVEL LOG_ALL
EOF

    # Add the embedded script
    cp ../../config/init.ipxe .

    # Configure make with named configuration
    # EMBED="init.ipxe"
    EMBEDDED_MAKE() {
        make -j"$(nproc)" "$@"
    }

    # Configure ccache
    ccache -F 0
    ccache -M 0

    # Get ccache stats
    ccache -s

    # Build
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-pcbios/ipxe.kpxe
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-efi/ipxe.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-x86_64-efi/ipxe.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache arm-linux-gnueabi-" ARCH=arm32 bin-arm32-efi/snp.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache aarch64-linux-gnu-" ARCH=arm64 bin-arm64-efi/snp.efi
    
    # # Build Realtek-specific binaries (10ec:8126)
    # EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-efi/10ec8126.efi
    # EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-x86_64-efi/10ec8126.efi
    
    # Build SNP and SNP-only variants for x86 architectures
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-efi/snp.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-i386-efi/snponly.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-x86_64-efi/snp.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache " bin-x86_64-efi/snponly.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache arm-linux-gnueabi-" ARCH=arm32 bin-arm32-efi/snponly.efi
    EMBEDDED_MAKE CROSS_COMPILE="ccache aarch64-linux-gnu-" ARCH=arm64 bin-arm64-efi/snponly.efi

    # Output files directly to the final directory
    OUTPUT_DIR="../../out"
    mkdir -p "$OUTPUT_DIR"
    cp bin-i386-pcbios/ipxe.kpxe "$OUTPUT_DIR/ipxe-i386.kpxe"
    cp bin-i386-efi/ipxe.efi "$OUTPUT_DIR/ipxe-i386.efi"
    cp bin-x86_64-efi/ipxe.efi "$OUTPUT_DIR/ipxe-x86_64.efi"
    cp bin-arm32-efi/snp.efi "$OUTPUT_DIR/ipxe-arm32.efi"
    cp bin-arm64-efi/snp.efi "$OUTPUT_DIR/ipxe-arm64.efi"
    
    # # Copy Realtek-specific binaries (10ec:8126)
    # cp bin-i386-efi/10ec8126.efi "$OUTPUT_DIR/realtek-10ec8126-i386.efi"
    # cp bin-x86_64-efi/10ec8126.efi "$OUTPUT_DIR/realtek-10ec8126-x86_64.efi"
    
    # Copy SNP variants
    cp bin-i386-efi/snp.efi "$OUTPUT_DIR/snp-i386.efi"
    cp bin-i386-efi/snponly.efi "$OUTPUT_DIR/snponly-i386.efi"
    cp bin-x86_64-efi/snp.efi "$OUTPUT_DIR/snp-x86_64.efi"
    cp bin-x86_64-efi/snponly.efi "$OUTPUT_DIR/snponly-x86_64.efi"
    cp bin-arm32-efi/snponly.efi "$OUTPUT_DIR/snponly-arm32.efi"
    cp bin-arm64-efi/snponly.efi "$OUTPUT_DIR/snponly-arm64.efi"

    # Get ccache stats
    ccache -s

    exit 0
fi
